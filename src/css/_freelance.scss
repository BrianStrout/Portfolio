@use "root";

.freelance-presenter {
  position: absolute;
  z-index: 5;
  background-color: pink;
  width: 100%;
  height: 100%;
  // opacity: 0.2;
  transition: all 1s ease-in-out;
}
.hanging-from-heaven {
  position: absolute;
  z-index: 10;
  top: 50;
  left: 200;
  display: flex;
  gap: 10px;
  background-color: rgba(255, 0, 0, 0.333);
}
.hanging-cloud-box {
  width: 150px;
  height: 100px;
  border: 3px solid black;
}
.hanging-cloud {
  width: 100%;
  height: 100%;
  background-image: url("./images/c3.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  display: flex;
  justify-content: center;
  align-items: center;
  animation: 4s ease-in-out infinite alternate bob;
}
.hanging-cloud > p {
  font-family: var(--letter-font);
  pointer-events: none;
  transform: translateY(-10px);
}

@keyframes bob {
  0% {
    transform: translateY(10px);
  }
  100% {
    transform: translateY(-10px);
  }
}
@keyframes dangle {
  0% {
    transform: rotateY(50deg);
  }
  100% {
    transform: rotateY(-50deg);
  }
}

.sheet {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.intro-grid-box {
  display: grid;
  grid-template-columns: 1fr 1fr;
  width: 60%;
  > div {
    position: relative;
    border: 5px solid black;
    display: flex;
    align-items: center;
    padding: 2rem;
    font-size: 2rem;
    transition: transform 0.5s ease-in;
  }
}
.intro-grid-one {
  border-right: none;
  justify-content: flex-end;
}
.intro-grid-two {
  border: 5px solid black;
  border-left: none;
  > div {
    position: absolute;
    top: calc(49% - 2rem);
    overflow-y: hidden;
  }
}

.clear {
  color: transparent;
}

.line-of-questioning {
  transition: transform 0.5s ease-in-out;
}
.out-of-question {
  transform: translateY(100px);
}
.upn-out-of-question {
  transform: translateY(-100px);
}

.get-up {
  transform: translateY(-100vh);
}

.get-down {
  transform: translateY(100vh);
}

.pitcher-box {
  width: 500px;
}

.unpresented {
  transform: translateX(100vw);
}
